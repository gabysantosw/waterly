////// === UTILS ===

//// --- VARIABLES ---

// colorbook
$primary: hsl(210, 40%, 50%);
$dark-primary: hsl(210, 40%, 20%);
$dark: hsl(210, 50%, 9%);
$light-dark: hsl(210, 40%, 12%);
$light: hsl(210, 0%, 95%);

// sizings
$min-button: 2.75rem;
$header-height: 2.75rem;
$info-height: calc(100vh - #{ $header-height });
$main-radius: .5rem;

//// --- FUNCTIONS ---

//// --- MIXINS ---

////// === BASE ===

//// --- RESET ---
body, p {
  margin: 0;
}

button {
  border: none;
  padding: 0;
}

//// --- BASE ---
body {
  background-color: $dark;
  font-family: 'Dosis', sans-serif;
}

////// === COMPONENTS ===
.header {
  min-height: $header-height;
  display: flex;
  justify-content: space-between;
  align-items: center;

  &__button {
    $size: $min-button;
    width: $size;
    height: $size;
    border-radius: 50%;
    background-color: $dark-primary;
    color: $light;
    font-family: 'Roboto Mono', monospace;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;

    &:hover {
      cursor: pointer;
      opacity: .7;
    }

    &::after,
    &::before {
      position: absolute;
      display: flex;
      justify-content: center;
      align-items: center;
      
      width: 100%;
      height: 100%;
      margin-bottom: .25rem;
      font-size: 1.5rem;
    }
    
    &::after {
      content: 'i';
      
      transition: 
        opacity 250ms 250ms ease-in-out, 
        transform 250ms ease-in-out;
    }
    
    &::before {
      content: 'x';
      
      // initial state
      opacity: 0;
      transform: scaleX(.25);
      
      transition: 
        opacity 250ms 250ms ease-in-out, 
        transform 250ms ease-in-out;
    }
    
    // hiding the i
    &.--active::after {
      opacity: 0;
      
      transform: rotate(45deg);
    }
    
    // showing the x
    &.--active::before {
      opacity: 1;
      transform: scaleX(1);
    }
  }

  &__logo {

  }
}

.tracker {
  $tracker-radius: 2rem;

  height: 100%;
  box-sizing: border-box;
  border-radius: $tracker-radius;
  margin: 1rem 0;
  background-color: $light-dark;

  display: flex;

  &__glasses {
    flex-grow: 1;

    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(4, 1fr);
    justify-items: center;
    align-items: center;
  }

  &__progress {
    width: 3.25rem;
    height: 100%;
    border-radius: $tracker-radius;
    background-color: $dark-primary;
    position: relative;
    overflow: hidden;
    
    // fix for safari ios -> overflow now working on transition
    -webkit-mask-image: -webkit-radial-gradient(white, black);

    // simulating the fill on hover for testing purposes
    // &:hover {
    //   &::before {
    //     transform: scaleY(1);
    //   }
    // }

    // different filling states
    @for $i from 1 to 9 {
      &.--filled-#{$i} {
        &::before {
          transform: scaleY($i * 0.125);
        }
      }
    }

    // the fill
    &::before {
      content: '';
      position: absolute;

      width: 100%;
      height: 100%;
      border-radius: $tracker-radius;
      background-color: $primary;

      // initial state
      transform: scaleY(0);
      transform-origin: bottom;
      transition: transform 500ms ease-in-out;      
    }
  }
}

.glass {
  position: relative;
  top: .5rem;
  width: 3rem;
  height: 4rem;
  border-radius: .25rem;
  background-color: $dark;
  background-image: url(../assets/empty.svg);
  background-position: center;
  background-repeat: no-repeat;
  box-shadow: 0 1px 1px 1px $dark;
  // turning it into a trapezoid
  transform: perspective(.5rem) rotateX(-2deg);
  position: relative;
  overflow: hidden;

  // simulating the --filled on hover for testing purposes
  // &:hover {
  //   &::before {
  //     transform: scaleY(1.5);
  //   }
  // }

  &.--filled {
    &::before {
      transform: scaleY(1.5);
    }
  }
  
  // the fill
  &::before {
    content: '';
    position: absolute;
    display: block;

    width: 100%;
    height: 100%;
    background-color: $primary;
    background-image: url(../assets/filled.svg);
    background-size: 60%;
    background-position: 50% 25%;
    background-repeat: no-repeat;

    // initial state
    transform: scaleY(0);
    transform-origin: bottom;
    transition: transform 500ms ease-in-out;
  }
}

.content {
  min-height: 3.5rem;
  padding: .5rem;
  border-radius: $main-radius;
  background-color: $dark-primary;
  color: $light;
  font-size: 1rem;

  display: flex;
  flex-direction: column;
  justify-content: space-around;

  &__timer {
    color: $primary;
    font-family: 'Roboto Mono', monospace;
  }

  &__timer-element {
    margin-left: .25rem;
  }
}

.info {
  position: absolute;
  left: 0;
  // initial state: hidden
  top: 100vh;
  
  height: $info-height;
  width: 100%;
  box-sizing: border-box;
  padding: .5rem;
  border-radius: $main-radius $main-radius 0 0;
  background-color: $light-dark;
  color: $light;
  
  transition: transform 500ms ease-in-out;
  
  &.--show {
    transform: translateY(calc(2rem - 100%));
  }
}

////// === LAYOUT ===
body {
  display: flex;
  justify-content: center;
}

.main {
  width: 32rem;
  max-width: 100%;
  min-height: 100vh;
  box-sizing: border-box;
  padding: 1rem;
  
  // needed for the overflow to work
  position: relative;
  overflow: hidden;

  display: flex;
  flex-direction: column;
}

////// === PAGES ===

////// === THEMES ===