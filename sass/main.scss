////// === UTILS ===

//// --- VARIABLES ---

// colorbook
$primary: hsl(210, 40%, 50%);
$dark-primary: hsl(210, 40%, 20%);
$dark: hsl(210, 50%, 9%);
$light-dark: hsl(210, 40%, 12%);
$light: hsl(210, 0%, 95%);

// sizings
$min-button: 2.75rem;
$header-height: 2.75rem;
$info-height: calc(100vh - #{ $header-height });
$main-radius: .5rem;

//// --- FUNCTIONS ---

//// --- MIXINS ---

////// === BASE ===

//// --- RESET ---
body, p {
  margin: 0;
}

button {
  border: none;
  padding: 0;
}

//// --- BASE ---
body {
  background-color: $dark;
  font-family: 'Dosis', sans-serif;
}

//// --- ANIMATIONS --- 
.glass-headshake {
  // with animation-iteration-count: 3;
  animation: glass-headshake 100ms cubic-bezier(.4,.1,.6,.9) 3;
}

@keyframes glass-headshake {
  $shake-intensity: 15%;
  // initial transform
  // transform: perspective(.5rem) rotateX(-2deg);

  25% {
    // move right
    transform: 
      perspective(.5rem) rotateX(-2deg)
      translateX($shake-intensity);
  }
  75% {
    // move left
    transform: 
      perspective(.5rem) rotateX(-2deg)
      translateX(-$shake-intensity);
  }
}

@keyframes progress-gradient {
  0% {
    transform: translateY(100%);
  }
  100%{
    transform: translateY(-100%);
  }
}

////// === COMPONENTS ===
.header {
  min-height: $header-height;
  display: flex;
  justify-content: space-between;
  align-items: center;

  &__button {
    $size: $min-button;
    width: $size;
    height: $size;
    border-radius: 50%;
    background-color: $dark-primary;
    color: $light;
    font-family: 'Roboto Mono', monospace;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;

    &:hover {
      cursor: pointer;
      opacity: .7;
    }

    &::after,
    &::before {
      position: absolute;
      display: flex;
      justify-content: center;
      align-items: center;
      
      width: 100%;
      height: 100%;
      margin-bottom: .25rem;
      font-size: 1.5rem;
    }
    
    &::after {
      content: 'i';
      
      transition: 
        opacity 250ms 250ms ease-in-out, 
        transform 250ms ease-in-out;
    }
    
    &::before {
      content: 'x';
      
      // initial state
      opacity: 0;
      transform: scaleX(.25);
      
      transition: 
        opacity 250ms 250ms ease-in-out, 
        transform 250ms ease-in-out;
    }
    
    // hiding the i
    &.--active::after {
      opacity: 0;
      
      transform: rotate(45deg);
    }
    
    // showing the x
    &.--active::before {
      opacity: 1;
      transform: scaleX(1);
    }
  }

  &__logo {

  }
}

.tracker {
  $tracker-radius: 2rem;

  height: 100%;
  box-sizing: border-box;
  border-radius: $tracker-radius;
  margin: 1rem 0;
  background-color: $light-dark;

  display: flex;

  &__glasses {
    flex-grow: 1;

    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(4, 1fr);
    justify-items: center;
    align-items: center;

    // needed for &__message
    position: relative;
  }

  &__progress {
    width: 3.25rem;
    height: 100%;
    border-radius: $tracker-radius;
    background-color: $dark-primary;
    position: relative;
    overflow: hidden;
    
    // fix for safari ios -> overflow now working on transition
    -webkit-mask-image: -webkit-radial-gradient(white, black);

    // simulating the fill on hover for testing purposes
    // &:hover {
    //   &::before {
    //     transform: scaleY(1);
    //   }
    // }

    // different filling states
    @for $i from 1 to 9 {
      &.--filled-#{$i} {
        // the fill
        &::before {
          transform: scaleY($i * 0.125);
        }

        // the animated gradient
        // &::after {
        //   opacity: .4;
        //   animation: progress-gradient 2000ms linear forwards infinite;
        // }
      }
    }

    // the fill
    &::before {
      content: '';
      position: absolute;

      width: 100%;
      height: 100%;
      border-radius: $tracker-radius;
      background-color: $primary;

      // initial state
      transform: scaleY(0);
      transform-origin: bottom;
      transition: transform 500ms ease-in-out;      
    }

    // the animated gradient
    // &::after {
    //   content: '';
    //   position: absolute;
    //   display: block;
    //   width: 100%;
    //   height: 100%;
    //   background: 
    //     linear-gradient(
    //       5deg,
    //       transparent 0%, 
    //       $dark-primary 40%,
    //       $dark-primary 50%,
    //       $dark-primary 60%,
    //       transparent 100%
    //     );

    //   // initial state
    //   opacity: 0;
    // }
  }

  &__message {
    position: absolute;

    width: 80%;
    height: 75%;
    box-sizing: border-box;
    padding: 2rem 1rem 1rem 1rem;
    border-radius: $main-radius;
    background-color: $dark-primary;
    color: $light;
    font-size: 1.125rem;
    text-align: center;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    // initial state -> hidden
    opacity: 0;
    transform: scale(0);

    &.--show {
      opacity: 1;
      transform: scale(1);

      // placed here to avoid transition on page load
      // downside -> no hiding transition
      // the delays are to take into account glass headshake
      $delay: 400ms;
      transition: 
        opacity 250ms 500ms ease-in-out,
        transform 500ms 500ms ease-in-out;
    }

    // decorative ! icon on top
    &::before {
      $size: 2rem;
      content: '!';
      position: absolute;
      top: -$size / 2;

      width: $size;
      height: $size;
      border-radius: 50%;
      background-color: $light;
      color: $dark;
      font-size: 1.5rem;
      font-weight: 700;
      font-family: 'Roboto Mono', monospace;
      display: block;
    }
  }

  &__paragraph {
    max-width: 15ch; 
    margin-bottom: 1rem;
  }

  &__message-button {
    margin-top: .5rem;
    padding: .5rem 1rem;
    border-radius: 10rem;
    background-color: $primary;
    color: $dark;
    font-size: 1rem;
    font-weight: 700;
    font-family: inherit;
  }
}

.glass {
  position: relative;
  top: .5rem;

  // win-w/h for responsivenes -> bigger glasses on bigger screens
  // min-width: 40%;
  // min-height: 60%;

  width: 3rem;
  height: 4rem;
  border-radius: .25rem;
  background-color: $dark;
  background-image: url(../assets/empty.svg);
  background-position: center;
  background-repeat: no-repeat;
  box-shadow: 0 1px 1px 1px $dark;
  // turning it into a trapezoid
  transform: perspective(.5rem) rotateX(-2deg);
  position: relative;
  overflow: hidden;

  transition: transform 250ms ease-in-out;

  // simulating the --filled on hover for testing purposes
  // &:hover {
  //   &::before {
  //     transform: scaleY(1.5);
  //   }
  // }

  &.--filled {
    transform: 
      perspective(.5rem) rotateX(-2deg)
      scale(1.15);

    &::before {
      transform: scaleY(1.5);
    }
  }
  
  // the fill
  &::before {
    content: '';
    position: absolute;
    display: block;

    width: 100%;
    height: 100%;
    background-color: $primary;
    background-image: url(../assets/filled.svg);
    background-size: 60%;
    background-position: 50% 25%;
    background-repeat: no-repeat;

    // initial state
    transform: scaleY(0);
    transform-origin: bottom;
    // aditional delay to give time for glass to scale
    transition: transform 500ms 150ms ease-in-out;
  }
}

.content {
  min-height: 3.5rem;
  padding: .5rem;
  border-radius: $main-radius;
  background-color: $dark-primary;
  color: $light;
  font-size: 1.125rem;;

  display: flex;
  flex-direction: column;
  justify-content: space-around;

  &__timer {
    color: $primary;
    font-family: 'Roboto Mono', monospace;
  }

  &__timer-element {
    margin-left: .25rem;
  }
}

.info {
  position: absolute;
  left: 0;
  // initial state: hidden
  top: 100vh;
  
  height: $info-height;
  width: 100%;
  box-sizing: border-box;
  padding: 2rem;
  border-radius: $main-radius $main-radius 0 0;
  background-color: $light-dark;
  color: $light;

  display: flex;
  flex-direction: column;
  align-items: center;
  
  transition: transform 500ms ease-in-out;
  
  &.--show {
    transform: translateY(calc(2rem - 100%));
  }

  &__paragraph {
    width: 100%;
    margin-bottom: 1rem;
    font-size: 1.25rem;
  }
}

.footer {
  margin-top: auto;
  margin-bottom: 2rem;

  width: 18ch;
  color: $primary;
  font-size: 1.125rem;
  text-align: center;

  &__link {
    &:visited {
      color: inherit;
    }
      text-decoration: underline;
  }
}

////// === LAYOUT ===
body {
  display: flex;
  justify-content: center;
}

.main {
  width: 32rem;
  max-width: 100%;
  min-height: 100vh;
  box-sizing: border-box;
  padding: 1rem;
  
  // needed for the overflow to work
  position: relative;
  overflow: hidden;

  display: flex;
  flex-direction: column;
}

////// === PAGES ===

////// === THEMES ===